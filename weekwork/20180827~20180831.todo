本周工作(20180827~20180831):
    2017科技企业年度分析报告合同:
        ✔ 修改合同起始时间 @done(18-08-27 10:06) 
        ✔ 合同截止时间 等待罗守贵确认分析报告电子版已成稿 @started(18-08-27 10:06) @done(18-08-29 15:00) @lasted(2d4h54m21s)
    
    2017科技企业统计管理工作:
        科技企业统计分析报告:
            ✔ 分析报告合同确认 @done(18-08-29 14:50)
            ☐ 分析报告合同会签，盖章合同寄回
            ☐ 收取分析报告发票，进行付款
        专家研讨会:
            ☐ 确认开会时间
            ☐ 经费执行
        科技企业统计总结表彰会准备:    
            ☐ 确认开会时间
            ☐ 确认报告印刷版式
            ☐ 报告印刷，奖状制作
            ☐ 奖状盖章
            ☐ 会场布置会务（席卡布置，会议资料，会场签到）
    穿插任务:
        ✔ 非涉密领域信息系统情况调研-上海市科技计划项目申报管理系统 @done(18-08-29 15:00)
        ✔ 非涉密领域信息系统情况调研-上海市科技计划项目立项管理系统 @done(18-08-29 15:00)
        ✔ 非涉密领域信息系统情况调研-上海市高新技术企业和技术先进型服务企业认定信息系统 @done(18-08-29 15:00)
        ✔ 非涉密领域信息系统情况调研-科技企业统计与服务通道 @done(18-08-29 15:00)

    2019可行性方案发布:
        ✔ 翻年度建表脚本执行 @done(18-08-27 13:26)
        ✔ 翻年度视图脚本执行 @done(18-08-27 13:26)
        ✔ 2019可行性方案外网程序发布 @started(18-08-27 13:26) @done(18-08-27 16:25) @lasted(2h59m40s)
        ✔ 2019可行性方案内网程序发布 @started(18-08-27 13:26) @done(18-08-27 16:25) @lasted(2h59m41s)
    
    上海市科技计划立项管理系统运维（2018年）投标书--技术:
        ✔ 项目概况 @done(18-08-29 15:01)

            

    个人学习:
        阅读《vue全家桶仿某鱼部分布局以及功能实现》:
            技术栈以及组件库
                vuex: 解决组件数据共享问题，加强组件数据持久化。
                vue-router: 主要实现spa单页面开发。
                axios: 异步请求数据。
                easymock: 假数据模拟接口。
                mint-ui: 一款移动端开发的框架。Mint UI
                stylus: css预处理器
                better-scroll: 一个移动端滚动的解决方案
                swiper: 一个强大的滑动特效插件
                lrz: 图片压缩插件


        学习Yarn:
        ✔ 安装Yarn @done(18-08-27 10:07)
            ✔ 安装Scoop,使用Scoop安装nodejs Yarn 真他妈好用啊 @done(18-08-27 16:25)
        ☐ 了解Yarn是用来干什么的 @started(18-08-27 10:07)
            Yarn工作流
                1.创建一个新项目
                    yarn init 在当前目录下新建 package.json 文件，内容由命令行选择生成                    
                2.添加/更新/删除依赖项                 
                3.安装/重新安装依赖项
                    yarn install 是用于安装一个项目的所有依赖。 Yarn会从package.json中读取依赖，并将依赖信息存储到yarn.lock中。 
                4.使用版本管理工具（例如 git）       
                    package.json：包含包的所有依赖信息；
                    yarn.lock：记录每一个依赖项的确切版本信息；
                    包实现功能的实际项目代码。
                5.持续集成 （Continuous integration，简称CI）
                    概念类进    
                        持续集成=> 持续交付 （Continuous delivery） => 持续部署（continuous deployment）
                        持续交付（Continuous delivery）指的是，频繁地将软件的新版本，交付给质量团队或者用户，以供评审。如果评审通过，代码就进入生产阶段。
                        持续交付可以看作持续集成的下一步。它强调的是，不管怎么更新，软件是随时随地可以交付的。
                        持续部署（continuous deployment）是持续交付的下一步，指的是代码通过评审以后，自动部署到生产环境。
                        持续部署的目标是，代码在任何时刻都是可部署的，可以进入生产阶段。
                        持续部署的前提是能自动化完成测试、构建、部署等步骤。
                    持续集成流程
                        1.代码提交：开发者向代码仓库提交代码。所有后面的步骤都始于本地代码的一次提交（commit）。
                        2.测试（第一轮）：
                            代码仓库对commit操作配置了钩子（hook），只要提交代码或者合并进主干，就会跑自动化测试。
                            测试有好几种。

                                单元测试：针对函数或模块的测试
                                集成测试：针对整体产品的某个功能的测试，又称功能测试
                                端对端测试：从用户界面直达数据库的全链路测试

                            第一轮至少要跑单元测试。
                        3.构建
                            通过第一轮测试，代码就可以合并进主干，就算可以交付了。
                            交付后，就先进行构建（build），再进入第二轮测试。所谓构建，指的是将源码转换为可以运行的实际代码，比如安装依赖，配置各种资源（样式表、JS脚本、图片）等等。
                            常用的构建工具如下。
                                Jenkins 适合私有仓库
                                Travis *Github 上的开源项目全部免费，且支持在 OS X 运行。
                                Circle *只对一个 container 免费，而且，若使用 OS X 需要额外收费
                                覆盖率
                                    codecov
                                跨浏览器测试    
                                    Nightwatch    
                            参考文献：https://www.jianshu.com/p/f9aa74d3066d        
